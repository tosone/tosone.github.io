<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Develop on Tosone&#39;s Blog</title>
    <link>https://tosone.cn/categories/develop/</link>
    <description>Recent content in Develop on Tosone&#39;s Blog</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en</language>
    <lastBuildDate>Sat, 20 Jul 2019 12:47:23 +0800</lastBuildDate>
    
	<atom:link href="https://tosone.cn/categories/develop/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>LeetCode C/C&#43;&#43;</title>
      <link>https://tosone.cn/post/leetcode-c-c&#43;&#43;/</link>
      <pubDate>Sat, 20 Jul 2019 12:47:23 +0800</pubDate>
      
      <guid>https://tosone.cn/post/leetcode-c-c&#43;&#43;/</guid>
      <description>&lt;p&gt;LeetCode 上做一些 C/C++ 的算法的时候总会出现一些奇奇怪怪的问题。如何在本地的时候把问题解决解决或者 Debug 出来呢？&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>Golang 中如何用 CGO 与 C 之间做一个缓存 Buffer</title>
      <link>https://tosone.cn/post/golang-cgo-buffer/</link>
      <pubDate>Mon, 05 Nov 2018 20:00:00 +0000</pubDate>
      
      <guid>https://tosone.cn/post/golang-cgo-buffer/</guid>
      <description>&lt;p&gt;Golang 和 C 之间如何传递二进制数据呢？&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>CGO 注意事项</title>
      <link>https://tosone.cn/post/cgo-attation/</link>
      <pubDate>Wed, 12 Sep 2018 10:14:28 +0000</pubDate>
      
      <guid>https://tosone.cn/post/cgo-attation/</guid>
      <description>&lt;p&gt;Golang 和 C 之间相互调用存在一些局限性。&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>CGO 入门</title>
      <link>https://tosone.cn/post/cgo/</link>
      <pubDate>Tue, 10 Jul 2018 21:14:28 +0000</pubDate>
      
      <guid>https://tosone.cn/post/cgo/</guid>
      <description>&lt;p&gt;Golang 和 C 之间相互调用入门。&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>[转载] 那些 C 语言缺失的，我在 Rust 里找到了</title>
      <link>https://tosone.cn/post/missing-in-c-but-found-in-rust/</link>
      <pubDate>Sun, 11 Mar 2018 20:14:28 +0000</pubDate>
      
      <guid>https://tosone.cn/post/missing-in-c-but-found-in-rust/</guid>
      <description>&lt;p&gt;我大概在 24 年前就爱上了 C 语言。当时，我通过一本西班牙语版的 &amp;ldquo;The C Programming Language&amp;rdquo;（第二版，作者是 Brian Kernighan 和 Dennis Ritchie，所以有时候也用 K&amp;amp;R 来称呼这本书）来学习 C 语言。在这之前，我用过 Turbo Pascal，它也有指针，也需要手动管理内存，而 C 语言在当时是新生事物，但十分强大。&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>CGO is not Go</title>
      <link>https://tosone.cn/post/cgo-is-not-go/</link>
      <pubDate>Sat, 10 Mar 2018 21:14:28 +0000</pubDate>
      
      <guid>https://tosone.cn/post/cgo-is-not-go/</guid>
      <description>&lt;p&gt;Some people, when confronted with a problem, think &amp;ldquo;I know, I’ll use cgo.&amp;rdquo; Now they have two problems.&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>Golang 获取 goroutine id 完全指南</title>
      <link>https://tosone.cn/post/golang-get-goroutine-id/</link>
      <pubDate>Fri, 09 Mar 2018 21:14:28 +0000</pubDate>
      
      <guid>https://tosone.cn/post/golang-get-goroutine-id/</guid>
      <description>&lt;p&gt;在 Golang 中，每个 goroutine 协程都有一个 goroutine id (goid)，该goid没有向应用层暴露。但是，在很多场景下，开发者又希望使用 goid 作为唯一标识，将一个 goroutine 中的函数层级调用串联起来。比如，希望在一个 http handler 中将这个请求的每行日志都加上对应的 goid 以便于对这个请求处理过程进行跟踪和分析。&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>PHONY target</title>
      <link>https://tosone.cn/post/phony-target/</link>
      <pubDate>Thu, 08 Mar 2018 21:14:28 +0000</pubDate>
      
      <guid>https://tosone.cn/post/phony-target/</guid>
      <description>&lt;p&gt;A phony target is one that is not really the name of a file; rather it is just a name for a recipe to be executed when you make an explicit request. There are two reasons to use a phony target: to avoid a conflict with a file of the same name, and to improve performance.&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>Compile Opencv</title>
      <link>https://tosone.cn/post/compile-opencv/</link>
      <pubDate>Sat, 15 Apr 2017 14:22:24 +0000</pubDate>
      
      <guid>https://tosone.cn/post/compile-opencv/</guid>
      <description>&lt;p&gt;OpenCV is released under a BSD license and hence it’s free for both academic and commercial use. It has C++, C, Python and Java interfaces and supports Windows, Linux, Mac OS, iOS and Android. OpenCV was designed for computational efficiency and with a strong focus on real-time applications. Written in optimized C/C++, the library can take advantage of multi-core processing. Enabled with OpenCL, it can take advantage of the hardware acceleration of the underlying heterogeneous compute platform.&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>Golang auto build version</title>
      <link>https://tosone.cn/post/golang-auto-build-versioning/</link>
      <pubDate>Tue, 11 Apr 2017 20:26:54 +0000</pubDate>
      
      <guid>https://tosone.cn/post/golang-auto-build-versioning/</guid>
      <description>&lt;p&gt;We needed a version number to find whether the binary was from yesterday or today’s source. Then we decided that for all our golang applications we should have a way to find out the version number, so that we can always query and find out which version it is, there by which source is running.&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>N 阶行列式求解</title>
      <link>https://tosone.cn/post/matrix-calc/</link>
      <pubDate>Fri, 24 Feb 2017 22:09:45 +0000</pubDate>
      
      <guid>https://tosone.cn/post/matrix-calc/</guid>
      <description>&lt;p&gt;用递归的方式求解 N 阶行列式的值。&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>Apache 下的 Lua 的配置</title>
      <link>https://tosone.cn/post/config-for-lua-in-apache/</link>
      <pubDate>Mon, 02 Jan 2017 18:32:08 +0000</pubDate>
      
      <guid>https://tosone.cn/post/config-for-lua-in-apache/</guid>
      <description>&lt;p&gt;对于 Apache 这个东西，绝大多数人都是非常熟悉的。很多人都会诟病这个 Apache，说它效率不高而且非常消耗资源，然后会建议用 Nginx。这些不能否认，但是我还是很喜欢 Apache，因为它比较稳定。&lt;/p&gt;

&lt;p&gt;Apache 关于 Lua 我不知道是哪一个版本编译进去了的，但是最新版的是有的。在 Apache 的 bin 目录下有一个 &lt;code&gt;lua51.dll&lt;/code&gt; 很明显，这个是 Lua5.1 版本的，目前 Lua 已经到了 5.3 版本了，如果你想追求新的版本的话，你可以自己把 Apache 编译一次。然后还有，在 Apache 的 modules 目录下有一个 &lt;code&gt;mod_lua.so&lt;/code&gt; 是开启 Apache 和 Lua 通信桥梁的文件。&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>Compile Lua and Luajit</title>
      <link>https://tosone.cn/post/compile-lua-and-luajit/</link>
      <pubDate>Sat, 31 Dec 2016 15:14:28 +0000</pubDate>
      
      <guid>https://tosone.cn/post/compile-lua-and-luajit/</guid>
      <description>&lt;p&gt;Lua is a lightweight, multi-paradigm programming language designed primarily for embedded systems and clients. Lua is cross-platform, since the interpreter is written in ANSI C, and has a relatively simple C API.&lt;/p&gt;</description>
    </item>
    
  </channel>
</rss>